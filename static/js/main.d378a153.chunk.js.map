{"version":3,"sources":["components/Wrapper/Wrapper.styles.js","components/Profile/Profilestats.styles.js","utils/statsConfig.js","components/Profile/Profilestats.js","components/Profile/Profile.styles.js","components/Profile/Profile.js","components/UploadStats/UploadStats.styles.js","components/UploadStats/UploadStats.js","components/FriendsList/FriendsList.styles.js","components/FriendsList/FriendsList.js","components/Transactions/Transactions.styles.js","components/Transactions/Transactions.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Container","styled","main","Statslist","ul","Statsitem","li","Statslabel","span","Statsquantity","statsConfig","label","quantity","stats","followers","views","likes","Profilestats","map","Profileinfo","div","Profiledesc","Profileimage","img","Profilename","p","Profiletag","Profilelocation","Profile","src","avatar","alt","name","tag","location","Statistics","section","UploadStatsTitle","h2","UploadStatsList","UploadStatsItem","UploadStatsLabel","UploadStatsPercentage","UploadStats","statisticalData","id","percentage","color","style","backgroundColor","Friendslist","FriendsCard","Online","Offline","FriendAvatar","FriendName","FriendsList","friends","isOnline","width","TransactionsTable","table","TransactionsHead","thead","TransactionsTr","tr","TransactionsTh","th","TransactionsBody","tbody","Transactions","transactions","type","amount","currency","Wrapper","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d378a153.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.main`\nbackground-color: #fff5f5;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\n/* height: 100vh; */\n`\n    ;","import styled from '@emotion/styled'\n\nexport const Statslist = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-top: 1px solid #c9c9c9;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`\n    ;\nexport const Statsitem = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    width: 100%;\n    :not(:last-child) {\n        border-right: 1px solid #c9c9c9;\n    }\n`\n    ;\nexport const Statslabel = styled.span`\n    margin-bottom: 8px;\n    color: #adacac;\n    font-size:12px;\n`\n    ;\n\nexport const Statsquantity = styled.span`\n    font-weight: bold;\n`\n    ;","import { stats } from '../data/user.json';\nexport const statsConfig = [\n    {\n        label: \"Followers\",\n        quantity: stats.followers\n    },\n    {\n        label: \"Views\",\n        quantity: stats.views\n    },\n    {\n        label: \"Likes\",\n        quantity: stats.likes\n    }\n]","import PropTypes from 'prop-types';\nimport { Statslist, Statsitem, Statslabel, Statsquantity } from './Profilestats.styles';\nimport { statsConfig } from '../../utils/statsConfig'\n\nexport default function Profilestats() {\n    return (\n         <Statslist>\n        {statsConfig.map(({ label, quantity }) => (\n          <Statsitem key={label}>\n                <Statslabel>{label}</Statslabel>\n                <Statsquantity>{quantity}</Statsquantity>\n          </Statsitem>\n        ))}\n      </Statslist>\n  );\n};\nProfilestats.propTypes = {\n  label: PropTypes.string,\n  quantity: PropTypes.number,\n};","import styled from '@emotion/styled';\n\nexport const Profileinfo = styled.div`\n    width: 20%;\n    height: 30%;\n    background-color: #f5f5f5;\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n    margin: 20px;\n    `\n    ;\nexport const Profiledesc = styled.div`\n    background-color: #fff;\n    padding: 20px;`\n    ;\nexport const Profileimage = styled.img`\n    width: 100px;\n    border-radius: 50%;`\n    ;\nexport const Profilename = styled.p``;\nexport const Profiletag = styled.p``;\nexport const Profilelocation = styled.p``;","import PropTypes from 'prop-types';\nimport Profilestats from '../Profile/Profilestats';\nimport { Profileinfo, Profiledesc, Profileimage, Profilename, Profiletag, Profilelocation } from '../Profile/Profile.styles';\nimport { name, tag, location, avatar } from \"../../data/user.json\";\n\nexport default function Profile() {\n    return (\n        <Profileinfo>\n            <Profiledesc>\n                <Profileimage\n                    src={avatar}\n                    alt=\"Аватар пользователя\"/>\n                <Profilename>{name}</Profilename>\n                <Profiletag>@{tag}</Profiletag>\n                <Profilelocation>{location}</Profilelocation>\n            </Profiledesc>\n            <Profilestats></Profilestats>\n        </Profileinfo>\n  );\n};\n\nProfile.propTypes = {\n    name: PropTypes.string,\n    tag: PropTypes.string,\n    location: PropTypes.string,\n    avatar: PropTypes.node,\n};","import styled from '@emotion/styled'\n\nexport const Statistics = styled.section`\n    background-color: #fff;\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n    width: 40%;\n    height: 30%;\n    margin: 20px;\n`\n    ;\nexport const UploadStatsTitle = styled.h2`\ncolor: #858585;\nfont-size: 35px;\npadding-top: 70px;\npadding-bottom: 85px;\nmargin: 0;\n\n`\n    ;\nexport const UploadStatsList = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-top: 1px solid #858585;\n    color: #fff;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`\n    ;\nexport const UploadStatsItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    width: 100%;\n    color: #fff;\n    :not(:last-child) {\n        border-right: 1px solid #858585;\n    }\n`\n    ;\nexport const UploadStatsLabel = styled.span`\nfont-weight: 500;\nmargin-bottom: 20px;\n`\n    ;\nexport const UploadStatsPercentage = styled.span`\nfont-size: 25px;\nfont-weight: 700;\n`\n    ;","import PropTypes from 'prop-types';\nimport { Statistics, UploadStatsTitle, UploadStatsList, UploadStatsItem, UploadStatsLabel, UploadStatsPercentage } from './UploadStats.styles';\nimport statisticalData from '../../data/statistical-data.json'\n\nexport default function UploadStats() {\n    return (\n        <Statistics>\n        <UploadStatsTitle>Upload stats</UploadStatsTitle>\n        <UploadStatsList>\n            {statisticalData.map(({ id, label, percentage, color }) => (\n                <UploadStatsItem\n                    key={id}\n                    style={{ backgroundColor: color }}>\n                    <UploadStatsLabel>{label}</UploadStatsLabel>\n                    <UploadStatsPercentage>{percentage}%</UploadStatsPercentage>\n            </UploadStatsItem>\n            ))}\n            </UploadStatsList>\n        </Statistics>\n    );\n};\nUploadStats.propTypes = {\n    id: PropTypes.node,\n    label: PropTypes.node,\n    percentage: PropTypes.number,\n    color: PropTypes.node,\n};","import styled from '@emotion/styled'\n\nexport const Friendslist = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    list-style: none; \n    margin: 20px;\n    padding: 0;\n    width: 30%;\n`\n    ;\nexport const FriendsCard = styled.li`\n    display: flex;\n    align-items: flex-start;\n    background-color: #fff;\n    width: 330px;\n    margin-bottom: 10px;\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n    padding: 20px;\n`\n    ;\n\nexport const Online = styled.span`\nbackground-color: green;\nwidth: 20px;\nheight: 20px;\nborder-radius: 50%;\nmargin-right: 20px;\n`\n    ;\nexport const Offline = styled.span`\nbackground-color: red;\nwidth: 20px;\nheight: 20px;\nborder-radius: 50%;\nmargin-right: 20px;\n`\n    ;\n\nexport const FriendAvatar = styled.img`\nbackground-color: #d4c7cb;\npadding: 5px;\nborder-radius: 4px;\nmargin-right: 20px;\n`\n    ;\n\nexport const FriendName = styled.p`\nfont-size: 20px;\nfont-weight: 600;\n\n`\n    ;","import PropTypes from 'prop-types';\nimport { Friendslist, FriendsCard, Online, Offline, FriendAvatar, FriendName } from './FriendsList.styles';\nimport friends from '../../data/friends.json';\n\nexport default function FriendsList() {\n    return (\n         <Friendslist>\n        {friends.map(({ avatar, name, isOnline, id }) => (\n          <FriendsCard key={id}> \n                {isOnline ? <Online /> : <Offline />}\n                <FriendAvatar\n                    src={avatar}\n                    alt={name}\n                    width=\"75\"/>\n                <FriendName>{name}</FriendName>\n          </FriendsCard>\n        ))}\n      </Friendslist>\n  );\n};\nFriendsList.propTypes = {\n  id: PropTypes.number,\n  avatar: PropTypes.node,\n  isOnline: PropTypes.bool,\n  name: PropTypes.string,\n};","  import styled from \"@emotion/styled/\";\n\nexport const TransactionsTable = styled.table`\n  border-collapse: collapse;\n  font-size: 18px;\n  margin-top: 15px;\n  background-color: #fff;\n  width: 64%;\n  margin: 20px;\n  margin-top: -53%;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n`\n    ;\nexport const TransactionsHead = styled.thead`\n  color: #fff;\n  font-size: 20px;\n  background-color: #eb658e;\n`\n    ;\nexport const TransactionsTr = styled.tr`\n:nth-of-type(even) {\n  background-color: #f5f5f5; }\n`\n    ;\nexport const TransactionsTh = styled.th`\n  padding: 5px;\n`\n    ;\nexport const TransactionsBody = styled.tbody`\n\n\n`\n    ;","import PropTypes from 'prop-types';\nimport transactions from \"../../data/transactions.json\";\nimport { TransactionsTable, TransactionsHead, TransactionsTr, TransactionsTh, TransactionsBody } from \"./Transactions.styles\";\n\nexport default function Transactions() {\n  return (\n    <TransactionsTable>\n      <TransactionsHead>\n        <TransactionsTr>\n          <TransactionsTh>Type</TransactionsTh>\n          <TransactionsTh>Amount</TransactionsTh>\n          <TransactionsTh>Currency</TransactionsTh>\n        </TransactionsTr>\n      </TransactionsHead>\n      <TransactionsBody>\n        {transactions.map(({ id, type, amount, currency }) => (\n          <TransactionsTr key={id}>\n            <TransactionsTh>{type}</TransactionsTh>\n            <TransactionsTh>{amount}</TransactionsTh>\n            <TransactionsTh>{currency}</TransactionsTh>\n          </TransactionsTr>\n        ))}\n      </TransactionsBody>\n    </TransactionsTable>\n  );\n};\n\nTransactions.propTypes = {\n  id: PropTypes.node,\n  type: PropTypes.string,\n  amount: PropTypes.number,\n  currency: PropTypes.string,\n};","import { Container } from './Wrapper.styles';\nimport Profile from '../Profile/Profile';\nimport UploadStats from '../UploadStats/UploadStats';\nimport FriendsList from '../FriendsList/FriendsList';\nimport Transactions from '../Transactions/Transactions';\n\nexport default function Wrapper() {\n    return (\n      <Container>\n        <Profile></Profile>\n        <UploadStats></UploadStats>\n        <FriendsList></FriendsList>\n        <Transactions></Transactions>\n      </Container>\n  );\n}\n","import Wrapper from './components/Wrapper/Wrapper';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}